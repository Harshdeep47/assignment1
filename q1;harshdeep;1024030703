#include <iostream>
using namespace std;

#define MAX 100

void create(int arr[], int &n) {
    cout << "Enter number of elements: ";
    cin >> n;
    cout << "Enter elements:\n";
    for (int i = 0; i < n; ++i)
        cin >> arr[i];
}

void display(int arr[], int n) {
    cout << "Array: ";
    for (int i = 0; i < n; ++i)
        cout << arr[i] << " ";
    cout << endl;
}

void insert(int arr[], int &n) {
    int pos, val;
    cout << "Enter position to insert: ";
    cin >> pos;
    cout << "Enter value: ";
    cin >> val;
    for (int i = n; i > pos; --i)
        arr[i] = arr[i - 1];
    arr[pos] = val;
    ++n;
}

void delete_elem(int arr[], int &n) {
    int pos;
    cout << "Enter position to delete: ";
    cin >> pos;
    for (int i = pos; i < n - 1; ++i)
        arr[i] = arr[i + 1];
    --n;
}

void linear_search(int arr[], int n) {
    int key, found = 0;
    cout << "Enter value to search: ";
    cin >> key;
    for (int i = 0; i < n; ++i) {
        if (arr[i] == key) {
            cout << "Found at index " << i << endl;
            found = 1;
        }
    }
    if (!found) cout << "Not found\n";
}

int main() {
    int arr[MAX], n = 0, choice;
    while (true) {
        cout << "\nMENU\n1.CREATE\n2.DISPLAY\n3.INSERT\n4.DELETE\n5.LINEAR SEARCH\n6.EXIT\nEnter choice: ";
        cin >> choice;
        switch (choice) {
            case 1: create(arr, n); break;
            case 2: display(arr, n); break;
            case 3: insert(arr, n); break;
            case 4: delete_elem(arr, n); break;
            case 5: linear_search(arr, n); break;
            case 6: return 0;
            default: cout << "Invalid choice\n";
        }
    }
    return 0;
}
